import { NextResponse } from 'next/server';export const config={matcher:['/catalog/:path*','/cart/:path*','/custom/:path*','/admin/:path*','/api/:path*']};export default function middleware(req){const url=new URL(req.url);const path=url.pathname;const session=(req.headers.get('cookie')||'').split(';').find(c=>c.trim().startsWith('session='));const hasSession=!!session;const isAdminRoute=path.startsWith('/admin');if(!hasSession&&(path.startsWith('/catalog')||path.startsWith('/custom')||isAdminRoute||path.startsWith('/api'))){return NextResponse.redirect(new URL('/login',req.url));}if(isAdminRoute&&hasSession){try{const b64=(session||'').split('=')[1];const s=JSON.parse(Buffer.from(b64,'base64').toString());if(!['admin','superadmin'].includes(s.role)){return NextResponse.redirect(new URL('/login',req.url));}}catch{}}return NextResponse.next();}