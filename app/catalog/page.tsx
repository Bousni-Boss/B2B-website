'use client';import { useEffect,useMemo,useState } from 'react';import NavBar from '@/components/NavBar';import { getCategoryFromRef,CATEGORY_ORDER } from '@/lib/categories';import { PRODUCTS } from '@/lib/products';import { getGemPolicyForCategory } from '@/lib/gem-policy';import ColorQtyMatrix from '@/components/ColorQtyMatrix';import SpecFieldset from '@/components/SpecFieldset';import type { VariantRow } from '@/lib/types';const DEFAULT_COLORS=['White Gold','Yellow Gold','Red/Rose Gold'];export default function CatalogPage(){const [role,setRole]=useState<string>('client');const [activeCat,setActiveCat]=useState<string|null>(null);const [modal,setModal]=useState<any|null>(null);const [variants,setVariants]=useState<VariantRow[]>([{color:DEFAULT_COLORS[0],qty:1}]);const [specs,setSpecs]=useState<Record<string,any>>({});useEffect(()=>{fetch('/api/whoami').then(r=>r.json()).then(d=>setRole(d.session?.role??'client'));},[]);const grouped=useMemo(()=>{const m:Record<string,any[]]={};Object.values(PRODUCTS).forEach((p:any)=>{const cat=getCategoryFromRef(p.id);(m[cat]||=[]).push(p);m[cat]=m[cat];});return Object.entries(m).sort(([a],[b])=>{const ai=CATEGORY_ORDER.indexOf(a);const bi=CATEGORY_ORDER.indexOf(b);if(ai!==-1&&bi!==-1)return ai-bi;if(ai!==-1)return -1;if(bi!==-1)return 1;return a.localeCompare(b);});},[]);const productsInActive=useMemo(()=>activeCat?(grouped.find(([c])=>c===activeCat)?.[1]??[]):[],[activeCat,grouped]);return(<div><NavBar role={role}/><main className='container' style={{paddingTop:24}}>{!activeCat?(<><h1>Browse by Category</h1><p style={{color:'var(--muted)'}}>Click a category to view products. Prices are agreed per order.</p><div className='row cols-3' style={{marginTop:16}}>{grouped.map(([cat,items])=>(<button key={cat} className='card' onClick={()=>setActiveCat(cat)}><h2>{cat}</h2><p style={{color:'var(--muted)'}}>{items.length} products</p></button>))}</div></>):(<><div style={{display:'flex',alignItems:'center',justifyContent:'space-between'}}><div><h1>{activeCat}</h1><p style={{color:'var(--muted)'}}>Select a product to configure.</p></div><button className='badge' onClick={()=>setActiveCat(null)}>← All categories</button></div><div className='row cols-3' style={{marginTop:16}}>{productsInActive.map((p:any)=>(<div key={p.id} className='card'><div className='img-ph'>{p.id}</div><h3 style={{marginTop:8}}>{p.id}</h3><p style={{color:'var(--muted)'}}>Unit: {p.unit} • Price on request</p><div style={{marginTop:8}}><button className='button button-primary' onClick={()=>{setModal(p);setVariants([{color:DEFAULT_COLORS[0],qty:1}]);setSpecs({});}}>Configure & add</button></div></div>))}</div></>)}</main>{modal&&(<div className='fixed inset-0' style={{background:'rgba(0,0,0,.5)',display:'flex',alignItems:'center',justifyContent:'center',padding:16}}><div className='card' style={{width:'min(900px,100%)'}}><div style={{display:'flex',alignItems:'center',justifyContent:'space-between',marginBottom:8}}><div><h2>{modal.id}</h2><div style={{color:'var(--muted)',fontSize:12}}>Category: {getCategoryFromRef(modal.id)}</div></div><button className='badge' onClick={()=>setModal(null)}>Close</button></div><div className='row cols-2'><div><div className='img-ph'>{modal.id}</div><div style={{marginTop:8,color:'var(--muted)'}}>{modal.description??''}</div></div><div className='space-y-3'>{(()=>{const cat=getCategoryFromRef(modal.id);const gp=getGemPolicyForCategory(cat);return(<><div><div className='text-sm' style={{fontWeight:600,marginBottom:6}}>Colors & Quantities</div><ColorQtyMatrix colors={DEFAULT_COLORS} value={variants} onChange={setVariants} gemPolicy={gp}/></div><div><div className='text-sm' style={{fontWeight:600,marginBottom:6}}>Category-specific details</div><SpecFieldset category={cat} specs={specs} onSpecs={setSpecs}/></div></>);})()}</div></div><div style={{display:'flex',justifyContent:'flex-end',gap:8,marginTop:12}}><button className='button' onClick={()=>setModal(null)}>Cancel</button><button className='button button-primary' onClick={()=>{alert('Added to cart (mock).');setModal(null);}}>Add to cart</button></div></div></div>)}</div>);}
